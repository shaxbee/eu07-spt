import sys
import os.path
import SCons.Util

Import('env')

# use libraries from ext/
env.AppendUnique(CPPPATH = ['#/ext/include'])
env.AppendUnique(LIBPATH = ['#/ext/lib'])

env.AppendUnique(CPPPATH = os.path.join(sys.prefix, 'include'))
env.AppendUnique(LIBPATH = os.path.join(sys.prefix, 'lib'))
#env.AppendUnique(LINKFLAGS = ['/EXPORT'])
    
# add WIN32 define and exception handling flags
env.AppendUnique(CXXFLAGS = ['/GR', '/EHsc'])
env.AppendUnique(CPPDEFINES = ['WIN32'])

debug_env = env.Clone()
debug_env.AppendUnique(CXXFLAGS = ['/Zi', '/Od', '/MDd'])
debug_env.Append(LINKFLAGS = ['/DEBUG'])
debug_env.Prepend(LIBSUFFIX = 'd', SHLIBSUFFIX = 'd')
debug_env.AppendUnique(CPPDEFINES = ['DEBUG'])
debug_env['BUILD_DIR'] = '#/build/win32/debug'

release_env = env.Clone()
release_env.AppendUnique(CXXFLAGS = ['/O2', '/MD'])
release_env.AppendUnique(CPPDEFINES = ['NDEBUG'])
release_env['BUILD_DIR'] = '#/build/win32/release'
	
# return modified environment
Return('debug_env', 'release_env')
