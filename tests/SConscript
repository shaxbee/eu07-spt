import os.path

Import('env')

#env = env.Clone()

def gtest(source, target, env, for_signature):
    result = list()
    libs = env['LIBS'] if 'LIBS' in env else []
    target = target[0].abspath + env['PROGSUFFIX']
    prog = env.Program(target, source, LIBS=libs+['gtest'], CXXFLAGS=env['CXXFLAGS'])
    action = env.Action(prog[0].abspath)
    env.Alias('check', prog, action)
    env.AlwaysBuild('check')
    return action
    
env.AppendUnique(BUILDERS = {'GTest': Builder(generator = gtest)})
env.AppendENVPath('PATH', '#/bin')

tests = dict()

for library in ['sptCore']:
    tests[library] = env.SConscript(os.path.join(library, 'SConscript'), exports = ['env'], duplicate = 0)
    
Return('tests')
